#-------------------------------------------------------------
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
#-------------------------------------------------------------

# One-hot encodes a vector

# INPUT PARAMETERS:
# --------------------------------------------------------------------------------------------
# NAME          TYPE    DEFAULT   MEANING
# --------------------------------------------------------------------------------------------
# X             matrix  ---       vector with N integer entries between 1 and numClasses
# numclasses    int     ---       number of columns, must be >= largest value in X

# Output: 
# --------------------------------------------------------------------------------------------
# NAME          TYPE     MEANING
# -------------------------------------------------------------------------------------------
# Y             matrix   one-hot-encoded matrix with shape (N, numClasses)
# -------------------------------------------------------------------------------------------

m_toOneHot = function(matrix[double] X, integer numClasses)
        return (matrix[double] Y) {
    if(numClasses < max(X))
      stop("numClasses must be >= largest value in X to prevent cropping");
    Y = table(seq(1, nrow(X)), X, nrow(X), numClasses);
}
