#-------------------------------------------------------------
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
#-------------------------------------------------------------

source("scalable_linalg/lu.dml") as decomp

test_LU = function() {
  print("Testing LU Decomposition.")
  n = 1000
  b = 100 # smallest block size
  eps = n*n*1e-12 # for lareger matrices eps should be larger

  # create random square matrix
  A = rand(rows=n, cols=n, min=-1.0, max=1.0, pdf="uniform")

  [P, L, U] = decomp::LU(A, b)

  # check if PA = LU. Infinity norm of (PA - LU) must be close to zero
  diff = P %*% A - L %*% U
  sup_norm = max(abs(diff))
  print(sup_norm)
  if (sup_norm > eps) {
    print("ERROR: LU decomposition does not reproduce original matrix")
  }
}

tmp = test_LU()
