#-------------------------------------------------------------
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
#-------------------------------------------------------------

source("scalable_linalg/qr.dml") as decomp

test_QR = function() {
  print("Testing QR Decomposition.")
  n = 1000
  m = 2000
  b = 100 # smallest block size
  eps = n*m*1e-12 # for lareger matrices eps should be larger

  # create a symmetric random matrix
  A = rand(rows=m, cols=n, min=-1.0, max=1.0, pdf="uniform")

  [Q, R] = decomp::QR(A, b)

  # check if A = QR. Infinity norm of (A - QR) must be close to zero
  diff = A - Q %*% R
  sup_norm = max(abs(diff))
  if (sup_norm > eps) {
    print("ERROR: QR decomposition does not reproduce original matrix")
  }
}

tmp = test_QR()
